name: iOS UI Test
run-name: ${{ github.actor }} is XCUITests
on:
  workflow_dispatch:    
    inputs:
      runner_type:
        description: 'Input name of runner'
        required: true
        default: 'macos-latest'
        type: string
      useUrlTestData:
        description: Enable download testdata from url
        type: boolean
        required: false
      list_tests:
        description: Input subset of tests for testing
        required: false
      ios-version:
        description: 'iOS Version (e.g., 18.2)'
        required: false
        default: '18.2'
        type: string
      simulator-name:
        description: 'Simulator Name'
        required: false
        default: 'iPhone 16'
        type: string
      xcode-version:
        description: 'Xcode version'
        required: false
        default: '16.2'
        type: string
      testing-branch:
        description: 'testing branch(e.g., master)'
        required: false
        type: string
env:
    PATH_TEST_SUITE: record360UITests/Resources/testRun.json

permissions:
  contents: read
  actions: read
  checks: write
  
jobs:
  build:
    name: Test UI on Simulator
    runs-on: ${{ github.event.inputs.runner_type }}
    # needs: clean-up-mobile-data-ui-testing
    steps:    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{secrets.WDIO_ACCESS_TOKEN}}
          repository: ${{secrets.WDIO_IOS_REPOS}}
          ref: ${{ github.event.inputs.testing-branch || 'master' }}

      - name: Set up SSH Agent and Key
        uses: tanmancan/action-setup-ssh-agent-key@1.0.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
          ssh-public-key: ${{ secrets.PUBLIC_KEY_CHECKOUT }}

      - name: Download Test data from firebase
        if: "${{ inputs.useUrlTestData == true }}"
        run: |
          echo "${{ secrets.FIREBASE_SDK_KEY }}" > record360UITests/Firebase/firebase-sdk-key.json
          cd record360UITests/Firebase
          npm install
          node firebase.js
          cd ../../
          
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ inputs.xcode-version || '16.2' }}

      - name: Set simulator environment
        run: |
          echo "SIMULATOR_NAME=${{ inputs.simulator-name || 'iPhone 17' }}" >> $GITHUB_ENV
        shell: bash

      - uses: futureware-tech/simulator-action@v4
        with:
          model: ${{ inputs.simulator-name || 'iPhone 15' }}
          os: 'iOS'
          os_version: ${{ inputs.ios-version || '18.2' }}
        
      - name: Install CocoaPods dependencies
        run: |
          pod install --repo-update
          pod update Record360SDK
        shell: bash
        
      - name: Copy Configuration plist
        run: sh ci_scripts/ci_configuration.sh
        shell: bash

      - name: Install xcpretty from https://github.com/xcpretty
        run: |
          # Create temporary Gemfile just for xcpretty
          echo "source 'https://rubygems.org'" > Gemfile
          echo "gem 'xcpretty', git: 'https://github.com/xcpretty/xcpretty.git', branch: 'master'" >> Gemfile
          
          # Install using bundler
          bundle install
          
          # Verify version
          bundle exec xcpretty --version
        
      - name: Execute Staging-UI
        if: "${{ inputs.list_tests == '' }}"
        run: |
          chmod +x ./ci_scripts/run-testsuite.sh
          ./ci_scripts/run-testsuite.sh --testBundle=record360UITests --path="$PATH_TEST_SUITE" --deviceName="${SIMULATOR_NAME}"
        shell: bash

      - name: Execute custom test Staging-UI
        if: "${{ inputs.list_tests != '' }}"
        run: |
          chmod +x ./ci_scripts/run-tests.sh
          ./ci_scripts/run-tests.sh --testBundle=record360UITests --list-tests=${{ inputs.list_tests }} --deviceName="${SIMULATOR_NAME}"
        shell: bash          

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: UI Test Result
          path: TestResult.xcresult
          retention-days: 7
