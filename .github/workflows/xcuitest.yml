name: iOS UI Test
run-name: ${{ github.actor }} is XCUITests
on:
  workflow_dispatch:    
    inputs:
      useUrlTestData:
        description: Enable download testdata from url
        type: boolean
        required: false
      list_tests:
        description: Input subset of tests for testing
        required: false
env:
    PATH_TEST_SUITE: record360UITests/Resources/testRun.json

permissions:
  contents: read
  actions: read
  checks: write
  
jobs:
  build:
    name: Test UI on Simulator
    runs-on: macos-latest
    # needs: clean-up-mobile-data-ui-testing
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.WDIO_ACCESS_TOKEN}}
          repository: ${{secrets.WDIO_IOS_REPOS}}
          ref: 4.16.x-auto # ${{ secrets.WDIO_IOS_BRANCH }}

      - name: Set up SSH Agent and Key
        uses: tanmancan/action-setup-ssh-agent-key@1.0.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
          ssh-public-key: ${{ secrets.PUBLIC_KEY_CHECKOUT }}

      - name: Download Test data from firebase
        if: "${{ inputs.useUrlTestData == true }}"
        run: |
          echo "${{ secrets.FIREBASE_SDK_KEY }}" > record360UITests/Firebase/firebase-sdk-key.json
          cd record360UITests/Firebase
          npm install
          node firebase.js
          cd ../../

      - name: Install CocoaPods dependencies
        run: |
          pod install --repo-update
        shell: bash
        
      - name: Copy Configuration plist
        run: sh ci_scripts/ci_configuration.sh
        shell: bash

      - name: Execute Staging-UI on iPhone 14
        if: "${{ inputs.list_tests == '' }}"
        run: |
          chmod +x ./ci_scripts/run-testsuite.sh
          ./ci_scripts/run-testsuite.sh --testBundle=record360UITests --path="$PATH_TEST_SUITE"
        shell: bash

      - name: Execute custom test Staging-UI on iPhone 14
        if: "${{ inputs.list_tests != '' }}"
        run: |
          chmod +x ./ci_scripts/run-tests.sh
          ./ci_scripts/run-tests.sh --testBundle=record360UITests --list-tests=${{ inputs.list_tests }}
        shell: bash

      - name: Generate Test Report - iPhone 14 - Record360-Staging-UI
        if: success() || failure()
        uses: kishikawakatsumi/xcresulttool@v1
        with:
          path: TestResult-iPhone14_Staging-UI.xcresult
          title: xcresultReport_iPhone14_Record360-Staging-UI
          show-code-coverage: false
