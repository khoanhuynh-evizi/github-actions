name: run Instrument Tests
run-name: ${{ github.actor }} is running Instrument Tests

on:
  workflow_dispatch:
    inputs:
      testsuite:
        type: choice
        description: Pick TestSuite Name
        default: InstrumentationUiTestSuite
        required: true
        options: 
        - AllTestCases
        - TasksFeature
        - NotificationsFeature
        - InspectionsFeature
        - TransactionsFeature
        - LoginFeature
      instrument_options:
        description: Input subset of tests for testing
        required: false
      branch:
        description: checkout branch
        default: master
        required: true

permissions:
  contents: read
  actions: read
  checks: write
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        android:
          - { version: '29', arch: "x86_64", target: "google_apis", profile: "Nexus 6" }
          # - { version: '31', arch: "x86_64", target: "google_apis", profile: "Nexus 6" }
    steps:

      - name: Trigger clean-up data ui testing
        run: |
          curl -XPOST -u "khoanhuynh-evizi:${{secrets.WDIO_ACCESS_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/Record360/webdriver-io/dispatches --data '{"event_type": "cleanup_data", "client_payload": {"company": "101", "framework": "android"}}'

      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.WDIO_ACCESS_TOKEN}}
          repository: ${{secrets.WDIO_REPOS}}
          ref: ${{ inputs.branch }}
          submodules: true

      - name: Enable KVM group permissions
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set Up JDK Environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Load Google Services File
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Load Gradle Properties File
        env:
          DATA: ${{secrets.GRADLE_PROPERTIES}}
        shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "$DATA" | base64 -d > ~/.gradle/gradle.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Download schema from staging using task:downloadApolloSchema 
        run: ./gradlew Submodule:sdk:downloadApolloSchema --endpoint=${{secrets.WDIO_ENDPOINT}} --schema=${{secrets.WDIO_PATH_SCHEMA}}

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-cached-${{ matrix.android.version }}-${{ matrix.android.arch }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.31.0
        with:
          api-level: ${{ matrix.android.version }}
          target: ${{ matrix.android.target }}
          profile: ${{ matrix.android.profile }}
          arch: ${{ matrix.android.arch }}
          emulator-boot-timeout: 12000
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Execute Record360 Staging custom instrument test ${{ inputs.instrument_options }} on API ${{ matrix.android.version }}
        if: "${{ inputs.instrument_options != '' }}"
        uses: reactivecircus/android-emulator-runner@v2.31.0
        with:
          api-level: ${{ matrix.android.version }}
          target: ${{ matrix.android.target }}
          profile: ${{ matrix.android.profile }}
          arch: ${{ matrix.android.arch }}
          emulator-boot-timeout: 12000
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            chmod +x ./scripts/run-tests.sh
            ./scripts/run-tests.sh --instrument-options=${{ inputs.instrument_options }}

      - name: Execute Instrument Testsuite ${{ inputs.testsuite }} on API ${{ matrix.android.version }}
        if: "${{ inputs.instrument_options == '' }}"
        uses: reactivecircus/android-emulator-runner@v2.31.0
        with:
          api-level: ${{ matrix.android.version }}
          target: ${{ matrix.android.target }}
          profile: ${{ matrix.android.profile }}
          arch: ${{ matrix.android.arch }}
          emulator-boot-timeout: 12000
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew app:connectedStagingDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=${{ inputs.WDIO_PACKAGE }}.tests.suite.${{ inputs.testsuite }} --stacktrace

      - name: Upload reports testsuite ${{ inputs.testsuite }} on API ${{ matrix.android.version }}
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-suite-${{ inputs.testsuite }}-${{ matrix.android.version }}
          path: |
            app/build/outputs/*/connected/*
            app/build/reports/androidTests/connected/**

      - name: Generate reports testsuite ${{ inputs.testsuite }} on API ${{ matrix.android.version }}
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Report Testsuite ${{ inputs.testsuite }} on API ${{ matrix.android.version }}
          path: app/build/outputs/*/connected/**/flavors/**/*.xml
          reporter: java-junit
          fail-on-empty: 'false'
          fail-on-error: 'false'
